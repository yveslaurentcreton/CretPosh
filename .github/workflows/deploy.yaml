name: Deploy to PowerShell Gallery

on:
  workflow_call:

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch unshallow
        run: git fetch --unshallow

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Run GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Apply version to CretPosh manifest
        shell: pwsh
        run: |
          $version = "${{ env.GitVersion_MajorMinorPatch }}"
          $prerelease = "${{ env.GitVersion_NuGetPreReleaseTagV2 }}"
          $manifestFile = Get-ChildItem ".\src\Modules\CretPosh\CretPosh.psd1"
          $content = Get-Content $manifestFile -Raw
          $content = $content.Replace("[[version]]", $version);
          $content = $content.Replace("[[prerelease]]", $prerelease);
          Set-Content -Value $content -Path $manifestFile

      - name: Publish CretPosh to PowerShell Gallery
        shell: pwsh
        run: Publish-Module -Path .\src\Modules\CretPosh\ -NuGetApiKey ${{ secrets.POWERSHELL_GALLERY_NUGET_APIKEY }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.GitVersion_MajorMinorPatch }}
          release_name: v${{ env.GitVersion_MajorMinorPatch }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cretPosh.ps1
          asset_name: cretPosh.ps1
          asset_content_type: application/x-powershell